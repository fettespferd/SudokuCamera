name: Build & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * *'

defaults:
  run:
    working-directory: ./flutter

env:
  JAVA_VERSION: 12.x
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: 1.22.x

jobs:
  install:
    name: Install Flutter & dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Install dependencies
        run: flutter pub get

      - name: Run code generator(s)
        run: |
          flutter pub run intl_utils:generate
          flutter pub run build_runner build

      - name: Remove obsolete files
        run: rm -rf ./.dart_tool/pub/bin/build_runner
      - name: Persist current state
        uses: actions/upload-artifact@v1
        with:
          name: source
          path: .

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Checkout source
        uses: actions/download-artifact@v1
        with:
          name: source
          path: .
      - name: Install dependencies
        run: flutter pub get

      - name: Run linter
        run: flutter analyze > flutter_analyze_report.txt
        continue-on-error: true

      - name: Install ruby
        uses: actions/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: '2.6'
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle config set without 'documentation'
          bundle install
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        run: |
          gem install danger --version ">= 6.0.0"
          danger --dangerfile=Dangerfile --danger_id="danger-pr"
        if: github.event_name == 'pull_request'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

  test:
    name: Run tests
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Checkout source
        uses: actions/download-artifact@v1
        with:
          name: source
          path: .
      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Checkout source
        uses: actions/download-artifact@v1
        with:
          name: source
          path: .
      - name: Install dependencies
        run: flutter pub get

      - name: Store Google Services configuration in a file
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_DEBUG }}" | base64 --decode > ./android/app/src/debug/google-services.json
          echo "${{ secrets.GOOGLE_SERVICES_JSON_RELEASE }}" | base64 --decode > ./android/app/google-services.json

        # TODO(JonasWanke): Remove the profile & debug builds when https://github.com/flutter/flutter/issues/58247 is fixed.
      - name: Build .apk
        run: |
          flutter build apk --debug
        # flutter build apk --profile
        # flutter build apk
        env:
          RELEASE_USE_DEBUG_KEY: true
      - run: |
          pwd
          echo "./build/app:"
          ls ./build/app
          echo "./build/app/outputs:"
          ls ./build/app/outputs
          ls ./build/app/outputs/flutter-apk
          cd ./build/app/outputs
          pwd

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v2
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'pull_request'
        with:
          name: apk
          path: flutter/build/app/outputs/flutter-apk/app-release.apk

  cleanup:
    name: Build
    needs: [install, lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Delete the source artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: source
          failOnError: false
